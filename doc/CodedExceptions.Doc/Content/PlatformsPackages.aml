<?xml version="1.0" encoding="utf-8"?>
<topic id="511edc3b-15cc-4b17-bd52-91096110d05b" revisionNumber="1">
	<developerConceptualDocument
		xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
		xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>This section specifies the programming platforms that the libraries are targeting, and the packages that contain the libraries.</para>
		</introduction>

		<section address="Platforms">
			<title>Platforms</title>
			<content>
				<para>The project is aimed at three platforms:</para>
				<list class="bullet">
					<listItem>
						<para>The Universal Windows Platform (UWP) for Windows® 10 and later, to be used in Windows® Store Apps and Windows® 10 IoT.</para>
					</listItem>
					<listItem>
						<para>The .NET Core 1.0 platform for platform independent projects, e.g. with ASP.NET Core.</para>
					</listItem>
					<listItem>
						<para>Classic desktop applications using .NET Framework 4.6.0 and later, for services and desktop clients.</para>
					</listItem>
				</list>
				<para>
					To use the full potential of both platforms, while avoiding redundant duplication of code, the source code of all classes resides in the .NET Core project (CodedExceptionsCore) and is linked into the desktop and UWP projects (CodedExceptionsDesktop, CodedExceptionsUniversal), with the exception of some types that are specific to the individual platform, namely the Configuration namespace.
					Differences between the platforms in shared types (mainly the ability to serialize classes in desktop applications) are included (or excluded) using the WINDOWS_DESKTOP, WINDOWS_UWP and NETCORE conditional compilation symbols.
				</para>
			</content>
		</section>

		<section address="Packages">
			<title>Packages</title>
			<content>
				<para>
					The project creates several NuGet packages.
					Use the NuGet package from my MyGet feed: https://www.myget.org/F/nerdyduck-release/api/v3/index.json.
					The package is designed to reference the assemblies matching your project type.
					If you need to debug the library, get the debug symbols from the same feed: https://www.myget.org/F/nerdyduck-release/symbols/.
				</para>
				<para>Download the binaries from the Releases page.</para>
				<list class="bullet">
					<listItem>
						<para>The Universal Windows Platform (UWP) for Windows® 10 and later, to be used in Windows® Store Apps and Windows® 10 IoT.</para>
					</listItem>
					<listItem>
						<para>The .NET Core 1.0 platform for platform independent projects, e.g. with ASP.NET Core.</para>
					</listItem>
					<listItem>
						<para>Classic desktop applications using .NET Framework 4.6.0 and later, for services and desktop clients.</para>
					</listItem>
				</list>
				<para>
					All packages contain the assemblies for all platforms, as well as IntelliSense XML files. The UAP assemblies are available for the x86, x64 and ARM platforms. The desktop and core assemblies are compiled for "any platform".
				</para>
			</content>
		</section>

		<relatedTopics>
			<!-- One or more of the following:
					 - A local link
					 - An external link
					 - A code entity reference

			<link xlink:href="Other Topic's ID"/>
			<link xlink:href="Other Topic's ID">Link inner text</link>

			<externalLink>
					<linkText>Link text</linkText>
					<linkAlternateText>Optional alternate link text</linkAlternateText>
					<linkUri>URI</linkUri>
			</externalLink>

			<codeEntityReference>API member ID</codeEntityReference>

			Examples:

			<link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
			<link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

			<externalLink>
					<linkText>SHFB on GitHub</linkText>
					<linkAlternateText>Go to GitHub</linkAlternateText>
					<linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
			</externalLink>

			<codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
			<codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
			<codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
			<codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
			<codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
			<codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
			<codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
			-->
		</relatedTopics>
	</developerConceptualDocument>
</topic>
