<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="SignOutputAssemblies" AfterTargets="Build" DependsOnTargets="Build" Condition=" '$(SignAssembliesAndPackage)' == 'true' And '$(IsCrossTargetingBuild)' != 'true' ">
    <CreateItem Include="$(OutputPath)**\$(AssemblyName)*.exe;$(OutputPath)**\$(TargetName)*.dll" Condition="'$(OutputType)' != 'Library'">
      <Output TaskParameter="Include" ItemName="FilesToSign"/>
    </CreateItem>
    <CreateItem Include="$(OutputPath)**\$(AssemblyName)*.dll" Condition="'$(OutputType)' == 'Library'">
      <Output TaskParameter="Include" ItemName="FilesToSign"/>
    </CreateItem>
    <SignFile CertificateThumbprint="$(CertificateThumbPrint)" SigningTarget="%(FilesToSign.Identity)" TimestampUrl="$(TimestampUrl)" TargetFrameworkVersion="v4.5" />
    <Message Importance="high" Text="Files signed: @(FilesToSign)" />
  </Target>
  <Target Name="SignPackage" AfterTargets="Pack" DependsOnTargets="Pack" Condition=" '$(SignAssembliesAndPackage)' == 'true' ">
    <DownloadFile SourceUrl="https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" DestinationFolder="$(BaseIntermediateOutputPath)" SkipUnchangedFiles="true" Condition="!Exists('$(BaseIntermediateOutputPath)nuget.exe')" />
    <CreateItem Include="$(PackageOutputPath)$(PackageId)*.nupkg">
      <Output TaskParameter="Include" ItemName="PackageToSign"/>
    </CreateItem>
    <Exec Command="&quot;$(BaseIntermediateOutputPath)nuget.exe&quot; sign &quot;%(PackageToSign.Identity)&quot; -CertificateFingerprint $(CertificateThumbPrint) -Timestamper $(TimestampUrl) -NonInteractive -Verbosity quiet" />
    <Message Importance="high" Text="Packages signed: @(PackageToSign)" />
  </Target>
  <Target Name="CreateGitHubZip" BeforeTargets="Pack" Condition=" '$(CreateGitHubZip)' == 'true' ">
    <MakeDir Directories="$(ZipOutputPath)"/>
    <ZipDirectory SourceDirectory="$(OutputPath)" DestinationFile="$(ZipOutputPath)$(AssemblyName)-$(Version)-binaries.zip" Overwrite="true" />
  </Target>
  <Target Name="CleanZip" AfterTargets="Clean" Condition=" '$(CreateGitHubZip)' == 'true' ">
    <ItemGroup>
      <_ZipToDelete Include="$(PackageOutputPath)$(AssemblyName)-$(Version)-binaries.zip" />
    </ItemGroup>
    <Delete Files="@(_ZipToDelete)"/>
  </Target>
  <Target Name="UpdateInformationalVersions" BeforeTargets="GetAssemblyVersion">
    <CreateProperty Value="$(Version)$(PrereleaseVersion)">
      <Output TaskParameter="Value" PropertyName="InformationalVersion"/>
    </CreateProperty>
  </Target>
  <Target Name="UpdatePackageVersions" BeforeTargets="GenerateNuspec">
    <CreateProperty Value="$(Version)$(PrereleaseVersion)">
      <Output TaskParameter="Value" PropertyName="PackageVersion"/>
    </CreateProperty>
    <Message Text="PackageVersion: $(PackageVersion)" Importance="high" />
  </Target>
</Project>
