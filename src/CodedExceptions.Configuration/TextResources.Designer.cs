//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NerdyDuck.CodedExceptions.Configuration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class TextResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NerdyDuck.CodedExceptions.Configuration.TextResources", typeof(TextResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly debug mode element in application configuration. Assembly name: &apos;{0}&apos;..
        /// </summary>
        internal static string DebugModeElement_ToAssemblyIdentity_Invalid {
            get {
                return ResourceManager.GetString("DebugModeElement_ToAssemblyIdentity_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid facility identifier override element in application configuration. Assembly name: &apos;{0}&apos;..
        /// </summary>
        internal static string FacilityOverrideElement_ToOverride_Invalid {
            get {
                return ResourceManager.GetString("FacilityOverrideElement_ToOverride_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly name &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Global_AssemblyNameInvalid {
            get {
                return ResourceManager.GetString("Global_AssemblyNameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration section name may not be null, empty or white-space only..
        /// </summary>
        internal static string Global_FromApplicationConfiguration_NoSection {
            get {
                return ResourceManager.GetString("Global_FromApplicationConfiguration_NoSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be boolean..
        /// </summary>
        internal static string Global_FromJson_NotABool {
            get {
                return ResourceManager.GetString("Global_FromJson_NotABool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be a JSON object..
        /// </summary>
        internal static string Global_FromJson_NotAnObject {
            get {
                return ResourceManager.GetString("Global_FromJson_NotAnObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be a number..
        /// </summary>
        internal static string Global_FromJson_NotANumber {
            get {
                return ResourceManager.GetString("Global_FromJson_NotANumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot parse JSON data..
        /// </summary>
        internal static string Global_FromJson_ParseFailed {
            get {
                return ResourceManager.GetString("Global_FromJson_ParseFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Element &apos;{0}&apos; has no attribute &apos;{1}&apos;..
        /// </summary>
        internal static string Global_FromXml_AttributeMissing {
            get {
                return ResourceManager.GetString("Global_FromXml_AttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Facility identifier is empty..
        /// </summary>
        internal static string Global_IdentifierEmpty {
            get {
                return ResourceManager.GetString("Global_IdentifierEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifier override of assembly &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Global_IdentifierInvalid {
            get {
                return ResourceManager.GetString("Global_IdentifierInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IsEnabled setting of assembly &apos;{0}&apos; is invalid..
        /// </summary>
        internal static string Global_IsEnabledInvalid {
            get {
                return ResourceManager.GetString("Global_IsEnabledInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path may not be null, empty or white-space only..
        /// </summary>
        internal static string Global_NoPath {
            get {
                return ResourceManager.GetString("Global_NoPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open file &apos;{0}&apos; for reading..
        /// </summary>
        internal static string Global_OpenFileFailed {
            get {
                return ResourceManager.GetString("Global_OpenFileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not support reading..
        /// </summary>
        internal static string Global_StreamNoRead {
            get {
                return ResourceManager.GetString("Global_StreamNoRead", resourceCulture);
            }
        }
    }
}
